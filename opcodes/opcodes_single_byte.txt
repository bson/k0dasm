These instructions can be decoded by looking only the first byte.

0x13: 'MOV sfr,#byte'
0x18: 'SUB A,!addr16'
0x19: 'SUB A,[HL+byte]'
0x1d: 'SUB A,#byte'
0x1e: 'SUB A,saddr'
0x28: 'ADDC A,!addr16'
0x29: 'ADDC A,[HL+byte]'
0x2d: 'ADDC A,#byte'
0x2e: 'ADDC A,saddr'
0x38: 'SUBC A,!addr16'
0x39: 'SUBC A,[HL+byte]'
0x3d: 'SUBC A,#byte'
0x3e: 'SUBC A,saddr'
0x48: 'CMP A,!addr16'
0x49: 'CMP A,[HL+byte]'
0x4d: 'CMP A,#byte'
0x4e: 'CMP A,saddr'
0x58: 'AND A,!addr16'
0x59: 'AND A,[HL+byte]'
0x5d: 'AND A,#byte'
0x5e: 'AND A,saddrp'
0x5f: 'AND A,[HL]'
0x68: 'OR A,!addr16'
0x69: 'OR A,[HL+byte]'
0x6d: 'OR A,#byte'
0x6e: 'OR A,saddr'
0x6f: 'OR A,[HL]'
0x78: 'XOR A,!addr16'
0x79: 'XOR A,[HL+byte]'
0x7d: 'XOR A,#byte'
0x7e: 'XOR A,saddr'
0x7f: 'XOR A,[HL]'
0x83: 'XCH A,saddr'
0x85: 'MOV A,[DE]'
0x88: 'ADD saddr,#byte'
0x8a: 'DBNZ C,$addr16'
0x8b: 'DBNZ B,$addr16'
0x8d: 'BC $addr16'
0x8e: 'MOV A,!addr16'
0x93: 'XCH A,sfr'
0x98: 'SUB saddr,#byte'
0x9d: 'BNC $addr16'
0x9e: 'MOV !addr16,A'
0xa8: 'ADDC saddr,#byte'
0xa9: 'MOVW AX,sfrp'
0xaa: 'MOV A,[HL+C]'
0xab: 'MOV A,[HL+B]'
0xad: 'BZ $addr16'
0xae: 'MOV A,[HL+byte]'
0xb8: 'SUBC saddr,#byte'
0xb9: 'MOVW sfrp,AX'
0xbb: 'MOV [HL+B],A'
0xbd: 'BNZ $addr16'
0xbe: 'MOV [HL+byte],A'
0xc8: 'CMP saddr,#byte'
0xce: 'XCH A,!addr16'
0xd8: 'AND saddr,#byte'
0xde: 'XCH A,[HL+byte]'
0xe8: 'OR saddr,#byte'
0xf4: 'MOV A,sfr'
0xf6: 'MOV sfr,A'
0xf8: 'XOR saddr,#byte'
0xfa: 'BR $addr16'
0xfe: 'MOVW sfrp,#word'
