These instructions can be decoded by looking only the first byte.



0x12: 'MOVW BC,#word'
0x13: 'MOV sfr,#byte'
0x14: 'MOVW DE,#word'
0x16: 'MOVW HL,#word'
0x18: 'SUB A,!addr16'
0x19: 'SUB A,[HL+byte]'
0x1d: 'SUB A,#byte'
0x1e: 'SUB A,saddr'
0x1f: 'SUB A,[HL]'
0x20: 'SET1 CY'
0x21: 'CLR1 CY'
0x22: 'PUSH PSW'
0x23: 'POP PSW'
0x24: 'ROR A,1'
0x25: 'RORC A,1'
0x26: 'ROL A,1'
0x27: 'ROLC A,1'
0x28: 'ADDC A,!addr16'
0x29: 'ADDC A,[HL+byte]'
0x2d: 'ADDC A,#byte'
0x2e: 'ADDC A,saddr'
0x2f: 'ADDC A,[HL]'
0x38: 'SUBC A,!addr16'
0x39: 'SUBC A,[HL+byte]'
0x3d: 'SUBC A,#byte'
0x3e: 'SUBC A,saddr'
0x3f: 'SUBC A,[HL]'
0x48: 'CMP A,!addr16'
0x49: 'CMP A,[HL+byte]'
0x4d: 'CMP A,#byte'
0x4e: 'CMP A,saddr'
0x4f: 'CMP A,[HL]'
0x58: 'AND A,!addr16'
0x59: 'AND A,[HL+byte]'
0x5d: 'AND A,#byte'
0x5e: 'AND A,saddrp'
0x5f: 'AND A,[HL]'
0x68: 'OR A,!addr16'
0x69: 'OR A,[HL+byte]'
0x6d: 'OR A,#byte'
0x6e: 'OR A,saddr'
0x6f: 'OR A,[HL]'
0x78: 'XOR A,!addr16'
0x79: 'XOR A,[HL+byte]'
0x7d: 'XOR A,#byte'
0x7e: 'XOR A,saddr'
0x7f: 'XOR A,[HL]'
0x80: 'INCW AX'
0x81: 'INC saddr'
0x82: 'INCW BC'
0x83: 'XCH A,saddr'
0x84: 'INCW DE'
0x85: 'MOV A,[DE]'
0x86: 'INCW HL'
0x87: 'MOV A,[HL]'
0x88: 'ADD saddr,#byte'
0x8a: 'DBNZ C,$addr16'
0x8b: 'DBNZ B,$addr16'
0x8d: 'BC $addr16'
0x8e: 'MOV A,!addr16'
0x8f: 'RETI'
0x90: 'DECW AX'
0x91: 'DEC saddr'
0x92: 'DECW BC'
0x93: 'XCH A,sfr'
0x94: 'DECW DE'
0x95: 'MOV [DE],A'
0x96: 'DECW HL'
0x97: 'MOV [HL],A'
0x98: 'SUB saddr,#byte'
0x9a: 'CALL !addr16'
0x9b: 'BR !addr16'
0x9d: 'BNC $addr16'
0x9e: 'MOV !addr16,A'
0x9f: 'RETB'
0xa8: 'ADDC saddr,#byte'
0xa9: 'MOVW AX,sfrp'
0xaa: 'MOV A,[HL+C]'
0xab: 'MOV A,[HL+B]'
0xad: 'BZ $addr16'
0xae: 'MOV A,[HL+byte]'
0xaf: 'RET'
0xb0: 'POP AX'
0xb1: 'PUSH AX'
0xb2: 'POP BC'
0xb3: 'PUSH BC'
0xb4: 'POP DE'
0xb5: 'PUSH DE'
0xb6: 'POP HL'
0xb7: 'PUSH HL'
0xb8: 'SUBC saddr,#byte'
0xb9: 'MOVW sfrp,AX'
0xba: 'MOV [HL+C],A'
0xbb: 'MOV [HL+B],A'
0xbd: 'BNZ $addr16'
0xbe: 'MOV [HL+byte],A'
0xc0: 'MOVW AX,AX'
0xc2: 'MOVW AX,BC'
0xc4: 'MOVW AX,DE'
0xc6: 'MOVW AX,HL'
0xc8: 'CMP saddr,#byte'
0xca: 'ADDW AX,#word'
0xce: 'XCH A,!addr16'
0xd0: 'MOVW AX,AX'
0xd2: 'MOVW BC,AX'
0xd4: 'MOVW DE,AX'
0xd6: 'MOVW HL,AX'
0xd8: 'AND saddr,#byte'
0xda: 'SUBW AX,#word'
0xde: 'XCH A,[HL+byte]'
0xe0: 'XCHW AX,AX'
0xe2: 'XCHW AX,BC'
0xe4: 'XCHW AX,DE'
0xe6: 'XCHW AX,HL'
0xe8: 'OR saddr,#byte'
0xea: 'CMPW AX,#word'
0xf4: 'MOV A,sfr'
0xf6: 'MOV sfr,A'
0xf8: 'XOR saddr,#byte'
0xfa: 'BR $addr16'
0xfe: 'MOVW sfrp,#word'
